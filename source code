{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPdjUmvOaEQHmuDGtesalDi"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"tH3UuBc94MBb"},"outputs":[],"source":["import nltk\n","from nltk.sentiment.vader import SentimentIntensityAnalyzer\n","\n","# Download required NLTK data if not already downloaded\n","try:\n","    nltk.data.find('sentiment/vader_lexicon.zip')\n","except LookupError:\n","    nltk.download('vader_lexicon')\n","\n","# Load the VADER sentiment analysis model\n","vader = SentimentIntensityAnalyzer()\n","\n","# Sample text\n","text = \"This is a great product! I love it.\"\n","\n","# Analyze the sentiment\n","sentiment_scores = vader.polarity_scores(text)\n","\n","# Print the results\n","print(f\"Sentiment scores: {sentiment_scores}\")\n","#  {'neg': 0.0, 'neu': 0.293, 'pos': 0.707, 'compound': 0.8402}\n","\n","if sentiment_scores['compound'] >= 0.05:\n","    print(\"Positive sentiment\")\n","elif sentiment_scores['compound'] <= -0.05:\n","    print(\"Negative sentiment\")\n","else:\n","    print(\"Neutral sentiment\")\n","#  Positive sentiment"]}]}